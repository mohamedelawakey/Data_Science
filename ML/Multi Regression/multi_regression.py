# -*- coding: utf-8 -*-
"""multi regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JQ78dPipKPzig1zwftUVtzllFXcDSFAH
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error

data = pd.read_excel('/content/50_StartUp.xlsx')
copy_data = data.copy()
copy_data

copy_data.head()

copy_data.tail()

copy_data.info()

copy_data.describe().T

copy_data.isna().sum()

the_corelation = copy_data.drop('State', axis=1).corr()
the_corelation

sns.heatmap(the_corelation, annot=True)

sns.scatterplot(x = 'R&D Spend', y = 'Profit', data = copy_data)

copy_data.hist(figsize = (13, 10))
plt.show()

copy_data['State'].unique()

copy_data_state = pd.get_dummies(copy_data['State'], dtype=int, prefix = 'state')
copy_data_state

copy_data_dummies = pd.concat([copy_data, copy_data_state], axis=1)
copy_data_dummies

x = copy_data_dummies.drop(['Profit', 'state_New York', 'State'], axis = 1)
y = copy_data_dummies['Profit']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 42)

model = LinearRegression()

model.fit(x_train, y_train)

y_pred = model.predict(x_test)
y_pred

pd.DataFrame({'y_pred' : y_pred, 'y_test' : y_test, 'diff' : y_pred - y_test})

MSE = mean_squared_error(y_pred, y_test)
MSE

RMSE = np.sqrt(MSE)
RMSE

model.score(x_train, y_train)

r2 = r2_score(y_test, y_pred)
print(f'R2 score: {r2:.2f} %')

df1 = copy_data.head()
df1.plot(kind='bar', figsize = (16, 10))
plt.grid(which='major', linestyle='-', linewidth='0.5', color='green')
plt.show()

print('Intercept of the model:\n', model.intercept_)
print("="*50)
print('Coefficient of the line:\n', model.coef_)

import statsmodels.api as sm
stmodel = sm.OLS(y, x).fit()
stmodel.summary()

x = sm.add_constant(x)
modle = sm.OLS(y, x).fit()
modle.summary()